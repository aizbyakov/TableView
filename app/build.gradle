/*
 * MIT License
 *
 * Copyright (c) 2021 Evren CoÅŸkun
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

apply plugin: 'com.android.application'

android {
    namespace "com.evrencoskun.tableviewsample"

    compileSdkVersion compile_sdk_version
    buildToolsVersion build_tools_version

    defaultConfig {
        versionName '1.0'
        versionCode 1
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version

        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = java_version
        targetCompatibility = java_version
    }

    buildFeatures {
        buildConfig = false
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    constraints {
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0") {
            because("kotlin-stdlib-jdk7 is now a part of kotlin-stdlib")
        }
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0") {
            because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
        }
    }

    implementation project(path: ':tableview')

    implementation "androidx.annotation:annotation:$androidx_annotation_version"
    implementation "androidx.appcompat:appcompat:$androidx_appcompat_version"
    implementation "androidx.fragment:fragment:$androidx_fragment_version"
    implementation "androidx.recyclerview:recyclerview:$androidx_recyclerview_version"
}

task cleanArtifacts(type: Delete) {
    delete fileTree(dir: "$artifactsDirectory" , include: "**/$rootProject.name*.apk")
}

task copyArtifacts(dependsOn: cleanArtifacts) {
    def sourceRoot = "$buildDir/outputs/apk/"

    doFirst{
        println "SOURCE: $sourceRoot"
        println "TARGET: $artifactsDirectory"
        println ""

        copy {
            from(fileTree(sourceRoot).files)
            into(artifactsDirectory)
            include('*.apk')

            eachFile {
                println "FILE: $it.relativeSourcePath -> $it.relativePath"
            }
        }
    }
}

build.finalizedBy(copyArtifacts)
